# .github/workflows/update_livetv.yml
name: Update LiveTV Playlist

on:
  schedule:
    - cron: '0 3 * * *'  # Run daily at 3 AM UTC
  workflow_dispatch:      # Allow manual triggering
  push:
    branches: [ main ]
    paths:
      - 'livetv.py'
      - '.github/workflows/update_livetv.yml'

# ðŸ‘‡ Ensure the GITHUB_TOKEN can push
permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # token not strictly required, but explicit never hurts:
          token: ${{ github.token }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip

      - name: Generate playlist
        env:
          LIVETV_BASE_URL: ${{ secrets.LIVETV_BASE_URL }}
        run: python livetv.py

      - name: Upload playlist artifact
        uses: actions/upload-artifact@v4
        with:
          name: livetv-playlist
          path: tivimate_playlist.m3u
          retention-days: 1

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          # Use the GitHub Actions bot identity
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Make sure the remote uses the token (robust against checkout config changes)
          git remote set-url origin "https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git"

          git add tivimate_playlist.m3u

          # Commit only if there are changes, then push
          if ! git diff --quiet --cached; then
            git commit -m "Update TiviMate playlist [skip ci]"
            git push origin HEAD:main
          else
            echo "No changes to commit."
          fi
